#!/usr/bin/env node
const path = require('path')
const config = require('../src/config')
const process = require('process')

let workPath = process.cwd()

if (process.argv.length === 3) {
  let inputPath = process.argv[2]
  if (path.isAbsolute(inputPath)) {
    workPath = inputPath
  } else {
    workPath = path.join(workPath, process.argv[2])
  }
}
let binPath = __dirname // 可执行文件目录
config.initConfig(binPath, workPath)

const session = require('express-session')
const userSevice = require('../src/service/user')
const dao = require('../src/dao')
const express = require('express')
// 初始化
dao.initDB()
  .then(userSevice.initSettingAdmin)
  .catch(err => {
  // 初始化失败，则关闭应用。
    console.log('initDB 失败 :', err)
    process.exit(1)
  })

const app = express()

const bodyParser = require('body-parser')
app.use(bodyParser.urlencoded({extended: false}))
app.use(bodyParser.json())

// 两个文件夹的静态页面
app.use('/api/static', express.static(config.staticPath))

// 设置session和cookie
app.use(session({
  secret: 'axe-admin',
  resave: false,
  saveUninitialized: false,
  cookie: { maxAge: 2 * 30 * 24 * 60 * 60 * 1000 }// 设置超时时间两个月。
}))

const dispatchRouter = require('../src/router')
dispatchRouter(app)

let port = config.port
if (!port) {
  port = 2678
}

let server = app.listen(port, function () {
  let host = server.address().address
  let port = server.address().port
  console.log('应用实例，访问地址为 http://%s:%s', host, port)
})
